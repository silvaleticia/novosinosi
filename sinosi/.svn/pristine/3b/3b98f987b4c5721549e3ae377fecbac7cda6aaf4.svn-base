package br.gov.go.secima.unidadeconservacao.controle;

import java.util.ArrayList;
import java.util.List;

import javax.faces.application.FacesMessage;
import javax.faces.model.SelectItem;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Scope;
import org.springframework.stereotype.Controller;

import br.com.ambientinformatica.ambientjsf.util.UtilFaces;
import br.gov.go.secima.unidadeconservacao.entidade.EnumPapelUsuario;
import br.gov.go.secima.unidadeconservacao.entidade.EnumUf;
import br.gov.go.secima.unidadeconservacao.entidade.Municipio;
import br.gov.go.secima.unidadeconservacao.entidade.Usuario;
import br.gov.go.secima.unidadeconservacao.persistencia.MunicipioDao;
import br.gov.go.secima.unidadeconservacao.persistencia.UsuarioDao;


@Controller("UsuarioListControl")
@Scope("conversation")
public class UsuarioListControl {

    private Usuario usuario;

    private EnumPapelUsuario papel;

    private EnumPapelUsuario papelFiltro;

    private String cpf;

    private String nome;

    private String email;

    private EnumUf uf;

    @Autowired
    private UsuarioDao usuarioDao;

    @Autowired
    private MunicipioDao municipioDao;

    @Autowired
    private UsuarioLogadoControl usuarioLogadoControl;

    private List<Usuario> usuarios = new ArrayList<>();

    private List<Municipio> municipios = new ArrayList<>();

    public void confirmar(){
        try {
            this.usuario = usuarioDao.alterar(this.usuario);
            UtilFaces.addMensagemFaces("Usuário salvo com sucesso!");
        } catch (Exception e) {
            UtilFaces.addMensagemFaces(e);
        }
    }

    public void listar(){
        try{
            this.usuarios = usuarioDao.listarPorCpfEmailNomeMenosAdmin(cpf,nome,email,usuarioLogadoControl.getUsuario().isContemPapel(EnumPapelUsuario.ADMIN),papelFiltro);
        } catch (Exception e) {
            UtilFaces.addMensagemFaces(e);
        }
    }

    public void adicionarPapel(){
        try{
            if(papel.equals(EnumPapelUsuario.ADMIN) && !usuarioLogadoControl.getUsuario().isContemPapel(EnumPapelUsuario.ADMIN)){
                UtilFaces.addMensagemFaces("Somente usuários Administradores podem adicionar esse papel.", FacesMessage.SEVERITY_ERROR);
                return;
            }
            this.usuario.addPapel(papel);
        }catch(Exception e){
            UtilFaces.addMensagemFaces(e);
        }
    }

    public void removerPapel(EnumPapelUsuario papelParam){
        try{
            this.usuario.removerPapel(papelParam);
            UtilFaces.addMensagemFaces("Papel removido!");
        }catch(Exception e){
            UtilFaces.addMensagemFaces(e);
        }
    }

    public void listaMunicipiosPorUfs() {
        try {
            municipios = municipioDao.listarPorUfNome(uf, null);
        } catch (Exception e) {
            UtilFaces.addMensagemFaces(e);
        }
    }

    public List<SelectItem> getPapeis(){
        List<SelectItem> listaPapeis = new ArrayList<>();
        listaPapeis = UtilFaces.getListEnum(EnumPapelUsuario.values());
        listaPapeis.remove(0);
        return listaPapeis; 
    }

    public List<SelectItem> getUfs(){
        return UtilFaces.getListEnum(EnumUf.values());
    }

    public Usuario getUsuario() {
        return usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;

        if(this.usuario != null && this.usuario.getMunicipio() != null){
            this.uf = this.usuario.getMunicipio().getUf();
        }else{
            this.uf = EnumUf.GO;
        }
        listaMunicipiosPorUfs();
    }

    public List<Usuario> getUsuarios() {
        return usuarios;
    }

    public String getNome() {
        return nome;
    }

    public void setNome(String nome) {
        this.nome = nome;
    }

    public EnumPapelUsuario getPapel() {
        return papel;
    }

    public void setPapel(EnumPapelUsuario papel) {
        this.papel = papel;
    }

    public List<Municipio> getMunicipios() {
        return municipios;
    }

    public EnumUf getUf() {
        return uf;
    }

    public void setUf(EnumUf uf) {
        this.uf = uf;
    }

    public String getCpf() {
        return cpf;
    }

    public void setCpf(String cpf) {
        this.cpf = cpf;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public EnumPapelUsuario getPapelFiltro() {
        return papelFiltro;
    }

    public void setPapelFiltro(EnumPapelUsuario papelFiltro) {
        this.papelFiltro = papelFiltro;
    }

}
